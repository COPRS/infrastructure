kind: DaemonSet

image:
  repository: fluent/fluent-bit
  tag: 1.8.10

logLevel: warn

serviceMonitor:
  enabled: true
  interval: 2m

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 20m
    memory: 128Mi

luaScripts:
 scripts.lua: |
    local escape_char_map = {
      [ "\\" ] = "\\\\",
      [ "\"" ] = "\\\"",
      [ "\b" ] = "\\b",
      [ "\f" ] = "\\f",
      [ "\n" ] = "\\n",
      [ "\r" ] = "\\r",
      [ "\t" ] = "\\t",
    }
    local escape_char_map_inv = { [ "\\/" ] = "/" }
    for k, v in pairs(escape_char_map) do
      escape_char_map_inv[v] = k
    end

    local function create_set(...)
      local res = {}
      for i = 1, select("#", ...) do
        res[ select(i, ...) ] = true
      end
      return res
    end
    local space_chars   = create_set(" ", "\t", "\r", "\n")
    local delim_chars   = create_set(" ", "\t", "\r", "\n", "]", "}", ",")
    local escape_chars  = create_set("\\", "/", '"', "b", "f", "n", "r", "t", "u")
    local literals      = create_set("true", "false", "null")

    local function next_char(str, idx, set, negate)
      for i = idx, #str do
        if set[str:sub(i, i)] ~= negate then
          return i
        end
      end
      return #str + 1
    end
    local function decode_error(str, idx, msg)
      local line_count = 1
      local col_count = 1
      for i = 1, idx - 1 do
        col_count = col_count + 1
        if str:sub(i, i) == "\n" then
          line_count = line_count + 1
          col_count = 1
        end
      end
      error( string.format("%s at line %d col %d", msg, line_count, col_count) )
    end

    local parse
    local function parse_string(str, i)
      local has_escape = false
      local last
      for j = i + 1, #str do
        local x = str:byte(j)
        if x < 32 then
          decode_error(str, j, "control character in string")
        end  
        if last == 92 then -- "\\" (escape char)
          local c = string.char(x)
          if not escape_chars[c] then
            decode_error(str, j, "invalid escape char '" .. c .. "' in string")
          end
          has_escape = true
          last = nil
        elseif x == 34 then -- '"' (end of string)
          local s = str:sub(i + 1, j - 1)
          if has_escape then
            s = s:gsub("\\.", escape_char_map_inv)
          end
          return s, j + 1
        else
          last = x
        end
      end
      decode_error(str, i, "expected closing quote for string")
    end
    local function parse_number(str, i)
      local x = next_char(str, i, delim_chars)
      local s = str:sub(i, x - 1)
      local n = tonumber(s)
      if not n then
        decode_error(str, i, "invalid number '" .. s .. "'")
      end
      return n, x
    end
    local function parse_literal(str, i)
      local x = next_char(str, i, delim_chars)
      local word = str:sub(i, x - 1)
      local literal_map = {
        [ "true"  ] = true,
        [ "false" ] = false,
        [ "null"  ] = nil,
      }
      if not literals[word] then
        decode_error(str, i, "invalid literal '" .. word .. "'")
      end
      return literal_map[word], x
    end
    local function parse_array(str, i)
      local res = {}
      local n = 1
      i = i + 1
      while 1 do
        local x
        i = next_char(str, i, space_chars, true)
        -- Empty / end of array?
        if str:sub(i, i) == "]" then
          i = i + 1
          break
        end
        -- Read token
        x, i = parse(str, i)
        res[n] = x
        n = n + 1
        -- Next token
        i = next_char(str, i, space_chars, true)
        local chr = str:sub(i, i)
        i = i + 1
        if chr == "]" then 
          break 
        end
        if chr ~= "," then 
          decode_error(str, i, "expected ']' or ','") 
        end
      end
      return res, i
    end
    local function parse_object(str, i)
      local res = {}
      i = i + 1
      while 1 do
        local key, val
        i = next_char(str, i, space_chars, true)
        -- Empty / end of object?
        if str:sub(i, i) == "}" then
          i = i + 1
          break
        end
        -- Read key
        if str:sub(i, i) ~= '"' then
          decode_error(str, i, "expected string for key")
        end
        key, i = parse(str, i)
        -- Read ':' delimiter
        i = next_char(str, i, space_chars, true)
        if str:sub(i, i) ~= ":" then
          decode_error(str, i, "expected ':' after key")
        end
        i = next_char(str, i + 1, space_chars, true)
        -- Read value
        val, i = parse(str, i)
        -- Set
        res[key] = val
        -- Next token
        i = next_char(str, i, space_chars, true)
        local chr = str:sub(i, i)
        i = i + 1
        if chr == "}" then 
          break 
        end
        if chr ~= "," then 
          decode_error(str, i, "expected '}' or ','") 
        end
      end
      return res, i
    end
    local char_func_map = {
      [ '"' ] = parse_string,
      [ "0" ] = parse_number,
      [ "1" ] = parse_number,
      [ "2" ] = parse_number,
      [ "3" ] = parse_number,
      [ "4" ] = parse_number,
      [ "5" ] = parse_number,
      [ "6" ] = parse_number,
      [ "7" ] = parse_number,
      [ "8" ] = parse_number,
      [ "9" ] = parse_number,
      [ "-" ] = parse_number,
      [ "t" ] = parse_literal,
      [ "f" ] = parse_literal,
      [ "n" ] = parse_literal,
      [ "[" ] = parse_array,
      [ "{" ] = parse_object,
    }
    parse = function(str, idx)
      local chr = str:sub(idx, idx)
      local f = char_func_map[chr]
      if f then
        return f(str, idx)
      end
      decode_error(str, idx, "unexpected character '" .. chr .. "'")
    end

    function json_decode(str)
      if type(str) ~= "string" then
        error("expected argument of type string, got " .. type(str))
      end
      local res, idx = parse(str, next_char(str, 1, space_chars, true))
      idx = next_char(str, idx, space_chars, true)
      if idx <= #str then
        decode_error(str, idx, "trailing garbage")
      end
      return res
    end

    function is_record(tag, timestamp, record)
        status, json_record = pcall(json_decode, record['log'])  -- parse the docker log into json
        if not status                                           -- failed to parse
            or json_record['log']== nil then                    -- no application logs
          -- Drop the record
          return -1, 0, 0
        end
        status, json_record = pcall(json_decode, json_record['log'])  -- parse the application log into json
        if not status                                                -- failed to parse
            or type(json_record)             ~= "table"              -- not parsed into a table
            or json_record['header']         == nil                  -- no field header
            or json_record['header']['type'] == nil                  -- no field header.type
            or json_record['header']['type'] ~= "REPORT" then        -- field header.type is not equal to REPORT
          -- Drop the record
          return -1, 0, 0
        end
        -- Keep the record
        return 1, timestamp, record
    end

    function auditdLogfileNameParse(tag, timestamp, record)
        intermediate=string.gsub(tag, '.log', '')
        hostname=string.gsub(intermediate, 'security.auditd.var.audit.audit_', '')
        record["host_name"]=hostname
        return 1, timestamp, record
    end

    function dumpRecord(record)
        if type(record) == 'table' then
          local str_record = '{ '
          for key,value in pairs(record) do
            if type(key) ~= 'number' then 
              key = '"'..key..'"' 
            end
            str_record = str_record ..key..' = "' .. dumpRecord(value) .. '",'
          end
          return str_record .. '} '
        else
          return tostring(record)
        end
    end
    function debug(tag, timestamp, record)
        print("tag : "..tag)
        print("timestamp : "..timestamp)
        print("record : "..dumpRecord(record))
        -- Keep the record
        return 0, 0, 0
    end

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/configuration-file
config:
  service: |
    [SERVICE]
      Daemon Off
      Flush 1
      Log_Level {{ .Values.logLevel }}
      Parsers_File parsers.conf
      Parsers_File custom_parsers.conf
      HTTP_Server On
      HTTP_Listen 0.0.0.0
      HTTP_Port {{ .Values.service.port }}
      Health_Check On

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
    [INPUT]
      Name             tail
      Tag              processing.log.*
      Path             /var/log/containers/*.log
      Exclude_Path     /var/log/containers/*fluent*.log
      DB               /var/log/fluentbit_processing.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              processing.trace.*
      Path             /var/log/containers/*.log
      Exclude_Path     /var/log/containers/*fluent*.log
      DB               /var/log/fluentbit_trace.db
      DB.Sync          full
      Rotate_Wait      10
    [INPUT]
      Name             tail
      Tag              system.*
      Path             /var/log/syslog
      DB               /var/log/fluentbit_system.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
      Buffer_Max_Size  1MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/postgresql-postgresql-*_infra_postgresql-*.log
      DB               /var/log/fluentbit_postgresql-infra.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/mongodb-*_infra_mongodb-*-*.log
      DB               /var/log/fluentbit_mongodb.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/*_kube-system_*.log
      DB               /var/log/fluentbit_kube-system.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/*_security_keycloak-*.log
      DB               /var/log/keycloak.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/apisix-*_infra_apisix-*.log
      DB               /var/log/fluentbit_apisix.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.container.*
      Path             /var/log/containers/openldap-*_security_openldap-*.log
      DB               /var/log/fluentbit_openldap.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.wazuh.*
      Path             /var/ossec/logs/alerts/alerts.json
      DB               /var/log/fluentbit-security_wazuh.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.auditd.*
      Path             /var/log/audit_*.json
      DB               /var/log/fluentbit-security_auditd.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
    [INPUT]
      Name             tail
      Tag              security.falco.*
      Path             /var/log/containers/falco-*.log
      DB               /var/log/fluentbit-security_falco.db
      DB.Sync          Normal
      Rotate_Wait      10
      buffer_max_size    10MB
  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
    [FILTER]
      Name    grep
      Match   processing.log.*
      Exclude log /.*ignoring file with negative size file: .*: -1/
    [FILTER]
      Name    grep
      Match   processing.log.*
      Exclude $log['header']['file'] ProductDistributionController.java
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log /.*systemd: Created|Removed slice libcontainer_.*_systemd_test_default.slice./
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log level=info
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log systemd.*Succeeded.
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log containerd.*[INFO]
    [FILTER]
      Name    grep
      Match   security.container.*
      Exclude log /.*\[INFO\]\[.*\] felix.*/
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log kubelet.*Pod status updated.*
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log kubelet.*RemoveContainer.*
    [FILTER]
      Name    grep
      Match   system.*
      Exclude log kernel
    [FILTER]
      Name    lua
      Match   processing.trace.*
      Script  /fluent-bit/scripts/scripts.lua
      Call    is_record
    [FILTER]
      Name    lua
      Match   security.auditd.*
      Script  /fluent-bit/scripts/scripts.lua
      Call    auditdLogfileNameParse
    [FILTER]
      Name                kubernetes
      Match               processing.log.*
      Kube_Tag_Prefix     processing.log.var.log.containers.
      Kube_URL            https://kubernetes.default.svc:443
      Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
      Merge_Log           On
      K8S-Logging.Parser  On
      K8S-Logging.Exclude On
      Keep_Log            Off
    [FILTER]
      Name                kubernetes
      Match               processing.trace.*
      Kube_Tag_Prefix     processing.trace.var.log.containers.
      Kube_URL            https://kubernetes.default.svc:443
      Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
      Merge_Log           On
      K8S-Logging.Parser  On
      K8S-Logging.Exclude On
      Keep_Log            Off
    [FILTER]
      Name                kubernetes
      Match               security.container.*
      Kube_Tag_Prefix     security.container.var.log.containers.
      Kube_URL            https://kubernetes.default.svc:443
      Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
      Merge_Log           On
      K8S-Logging.Parser  On
      K8S-Logging.Exclude On
      Keep_Log            Off

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
    [OUTPUT]
      Name        kafka
      Format      json
      Match       processing.log.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.processing
    [OUTPUT]
      Name        kafka
      Format      json
      Match       processing.trace.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.trace
      rdkafka.enable.idempotence true
    [OUTPUT]
      Name        kafka
      Format      json
      Match       system.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.system
    [OUTPUT]
      Name        kafka
      Format      json
      Match       security.container.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.docker-security
    [OUTPUT]
      Name        kafka
      Format      json
      Match       security.wazuh.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.wazuh
    [OUTPUT]
      Name        kafka
      Format      json
      Match       security.auditd.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.auditd
    [OUTPUT]
      Name        kafka
      Format      json
      Match       security.falco.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.falco
    [OUTPUT]
      Name        kafka
      Format      json
      Match       security.scans.*
      Brokers     kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
      Topics      fluentbit.scans
 

daemonSetVolumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File
  - name: wazuh-alert
    hostPath:
      path: /var/ossec/logs/alerts

daemonSetVolumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true
  - name: wazuh-alert
    mountPath: /var/ossec/logs/alerts
    readOnly: true

tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoSchedule
    key: node-role.kubernetes.io/gateway
