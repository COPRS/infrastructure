- name: Check script variables
  assert:
    that:
      - rs_addon_url is defined
      - stream_name is defined

- name: Deploy RS add-on
  block:
    - name: Install java jre
      apt: 
        name: openjdk-17-jre-headless
        state: present
      
    - name: Setting some facts
      set_fact:
        shell_jar_path: "/home/safescale/{{ shell_jar_url | urlsplit('path') | basename }}"
        rs_addon_name: "{{ rs_addon_url | basename | splitext | first }}" 

    - name: Check if scdf shell jar exists
      stat:
        path: "{{ shell_jar_path }}"
      register: shell_jar_file

    - name: Download scdf shell jar
      get_url:
        url: "{{ shell_jar_url }}"
        dest: "{{ shell_jar_path }}"
        mode: 0755
        checksum: "sha1:{{ shell_jar_sha1 }}"
      when:
        - "not shell_jar_file.stat.exists or shell_jar_file.stat.mode != 755 or shell_jar_file.stats.checksum != shell_jar_sha1"

    - name: Create tmp directory
      tempfile:
        state: directory
        suffix: rs_addon
      register: rs_addon_dir

    - name: Unzip rs_addon
      unarchive:
        src: "{{ rs_addon_url }}"
        dest: "{{ rs_addon_dir.path }}"
        remote_src: yes

    - name: Get stream definition
      slurp:
        src: "{{ rs_addon_dir.path }}/{{ rs_addon_name }}_Executables/stream-definition.properties"
      register: stream_definition_content

    - name: Parse stream-definition file
      set_fact:
        stream_definition: "{{ stream_definition_content.content | b64decode | regex_search('definition ?= ?(.*)', '\\1') | first }}"

    - name: Assert successful stream parse
      assert:
        that:
          stream_definition | length > 0
        quiet: true

    - name: Get stream properties
      slurp:
        src: "{{ rs_addon_dir.path }}/{{ rs_addon_name }}_Executables/stream-parameters.properties"
      register: stream_properties_content

    - name: Parse stream-properties file
      set_fact:
        stream_properties: "{{ stream_properties_content.content | b64decode | regex_replace('\\n', ',') }}"

    - name: Template script to gw
      template:
        src: scdf_shell_script.txt
        dest: "{{ rs_addon_dir.path }}"

    - name: Check if additional_resources folder exists
      stat:
        path: "{{ rs_addon_dir.path }}/{{ rs_addon_name }}_Executables/additional_resources"
      register: additional_resources_dir    

    - name: Deploy the additional resources into the cluster
      shell: "kubectl apply -f {{ rs_addon_dir.path }}/{{ rs_addon_name }}_Executables/additional_resources/"
      register: deploy_log
      when: additional_resources_dir.stat.exists and additional_resources_dir.stat.isdir

    - name: Print deployed resources
      debug:
        msg: "{{ deploy_log.stdout_lines }}"
      when: additional_resources_dir.stat.exists and additional_resources_dir.stat.isdir

    - name: Deploy executables with the scdf shell jar
      shell: |
        java -jar {{ shell_jar_path }} \
        --dataflow.uri=http://spring-cloud-dataflow-server.processing.svc.cluster.local:8080 \
        --spring.shell.commandFile={{ rs_addon_dir.path }}/scdf_shell_script.txt
      register: deploy_log

    - name: Print deploy log
      debug:
        msg: "{{ deploy_log.stdout_lines }}"

  always:
    - name: Remove resources tmp dir
      file:
        path: "{{ rs_addon_dir.path }}"
        state: absent
      when:
        - rs_addon_dir.path is defined
        - not debug

    - name: Warn about not deleted tmp folder
      debug:
        msg:
          - "DEBUG: the temporary folder containing the rs add-on has been kept for debugging purpose"
          - "{{ rs_addon_dir.path }}"
          - "DO NOT FORGET TO DELETE IT WHEN YOU ARE DONE"
      when:
        - debug
