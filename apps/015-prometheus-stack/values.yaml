defaultRules:
  create: false

alertmanager:
  serviceMonitor:
    selfMonitor: true
  alertmanagerSpec:
    image:
      repository: quay.io/prometheus/alertmanager
      tag: v0.23.0
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/infra"
                operator: Exists
grafana:
  enabled: false
kubeApiServer:
  serviceMonitor:
    interval: 2m
kubelet:
  serviceMonitor:
    interval: 2m
kubeControllerManager:
  serviceMonitor:
    interval: 2m
coreDns:
  serviceMonitor:
    interval: 2m
kubeEtcd:
  enable: true
  serviceMonitor:
    interval: 2m
    scheme: "https"
    caFile: "/etc/prometheus/secrets/etcd-client/ca.crt"
    keyFile: "/etc/prometheus/secrets/etcd-client/server.key"
    certFile: "/etc/prometheus/secrets/etcd-client/server.crt"
kubeScheduler:
  serviceMonitor:
    interval: 2m
kubeProxy:
  serviceMonitor:
    interval: 2m
kubeStateMetrics:
  serviceMonitor:
    interval: 2m
nodeExporter:
  serviceMonitor:
    interval: 2m

prometheus-node-exporter:
  image:
    repository: quay.io/prometheus/node-exporter
    tag: v1.3.0
  extraHostVolumeMounts:
    - name: system-dbus-socket
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
  extraArgs: 
    - --collector.systemd
    - --collector.systemd.unit-whitelist=(docker|kubelet|openvpn-client.*).service
    
prometheusOperator:
  enabled: true
  admissionWebhooks:
    patch:
      image:
        repository: k8s.gcr.io/ingress-nginx/kube-webhook-certgen
        tag: v1.0
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "node-role.kubernetes.io/infra"
                  operator: Exists
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: "node-role.kubernetes.io/infra"
              operator: Exists
  serviceMonitor:
    interval: "2m"
  image:
    repository: quay.io/prometheus-operator/prometheus-operator
    tag: v0.52.1-amd64
  prometheusConfigReloader:
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.52.1-amd64
  thanosImage:
    repository: quay.io/thanos/thanos
    tag: v0.23.1

prometheus:
  enabled: true
  serviceMonitor:
    interval: 2m
  prometheusSpec:
    image:
      repository: quay.io/prometheus/prometheus
      tag: v2.31.1
    replicas: 1
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    retention: 2d
    scrapeInterval: 2m
    thanos:
      objectStorageConfig:
        name: thanos-bucket-credentials
        key: objstore.yml
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
              - key: "node-role.kubernetes.io/infra"
                operator: Exists
            - matchExpressions:
              - key: "node-role.kubernetes.io/prometheus"
                operator: Exists
    secrets:
      - etcd-client
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          resources:
            requests:
              storage: 20Gi
