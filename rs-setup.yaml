- name: Prepare machines
  hosts: k8s_cluster
  gather_facts: true
  become: true
  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted
  roles:
    - { role: "pam-ldap" }
  tasks:
    - name: Allow SSH connection with password
      replace:
        path: /etc/ssh/sshd_config
        regexp: '^(.*)PasswordAuthentication(.*)$'
        replace: PasswordAuthentication yes
      notify:
        - Restart sshd
      
    - name: Config firewalld with coredns
      firewalld:
        permanent: yes
        immediate: yes
        source: "{{ kube_pods_subnet }}"
        zone: trusted
        state: enabled

- name: Set egress networing
  hosts: egress
  gather_facts: false
  vars_files:
    - "roles/safescale-cluster/defaults/main.yaml"
  tasks:
    - name: Get informations from tenant file
      import_tasks: roles/safescale-cluster/tasks/tenant.yaml
      delegate_to: localhost
      run_once: true

    - name: Add floating IP to egress
      os_floating_ip:
        auth:
          auth_url: "https://iam.eu-west-0.prod-cloud-ocb.orange-business.com"
          username: "{{ tenant.identity.Username }}"
          password: "{{ tenant.identity.Password }}"
          domain_name: "{{ tenant.identity.DomainName }}"
          project_id: "{{ tenant.compute.ProjectID }}"
        region_name: "{{ tenant.compute.Region }}"
        server: "{{ item }}"
      loop: "{{ groups['egress'] }}"
      delegate_to: localhost
      run_once: true

    ## netplan add a new default route without removing the previous one
    - name: Remove previous default route
      command: "ip route del default"
      become: true
      ignore_errors: true

    - name: Set netplan config
      copy:
        dest: /etc/netplan/11-ens3-private.yaml
        content: |
          network:
            version: 2
            renderer: networkd
            ethernets:
              ens3:
                addresses: [{{ address_mask | ipaddr('host/prefix') }}]
                gateway4: {{ gateway_ip }}
      vars:
        address_mask: "{{ ansible_default_ipv4['address'] }}/{{ ansible_default_ipv4['netmask'] }}"
        gateway_ip: "{{ hostvars[groups['gateway'][0]]['ansible_default_ipv4']['gateway'] }}"
      become: true

    - name: Apply netplan config
      command: netplan apply
      become: true

- name: Prepare gateways
  hosts: gateway
  gather_facts: false
  tags: gateway
  vars_files: 
    - "collections/kubespray/roles/download/defaults/main.yml"
    - "collections/kubespray/roles/kubespray-defaults/defaults/main.yaml"
  pre_tasks:
    - name: install pip modules for ansible kubernetes.core
      pip: 
        name: "{{ item }}"
      loop:
        - pyyaml==5.3.1
        - openshift==0.12.1
        - kubernetes==12.0.1
        - hvac==0.11.2
  roles:
    - { role: "collections/kubespray/roles/kubernetes-apps/helm", become: yes }
    - { role: "kustomize", become: yes }
    - { role: "kubectl", become: yes }

- name: Create resources
  hosts: gateway[0]
  gather_facts: false
  vars_files: 
    - "roles/safescale-cluster/defaults/main.yaml"
  roles:
    - { role: "rs-defaults" }
  tasks:
    - name: Create necessary namespaces
      kubernetes.core.k8s:
        name: "{{ item }}"
        api_version: v1
        kind: Namespace
        state: present
      loop:
        - monitoring
        - security

    - name: Get informations from tenant file
      import_tasks: roles/safescale-cluster/tasks/tenant.yaml
      delegate_to: localhost
      run_once: true

    - name: Get gateway and egress info from cloud provider
      openstack.cloud.server_info:
        auth:
          auth_url: "https://iam.eu-west-0.prod-cloud-ocb.orange-business.com"
          username: "{{ tenant.identity.Username }}"
          password: "{{ tenant.identity.Password }}"
          domain_name: "{{ tenant.identity.DomainName }}"
          project_id: "{{ tenant.compute.ProjectID }}"
        region_name: "{{ tenant.compute.Region }}"
        server: "{{ item }}" 
      loop: "{{ groups['gateway'] + groups['egress'] }}"
      delegate_to: localhost
      run_once: true
      register: info

    - name: Create configmap ips in security ns
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: ips
            namespace: security
          data: 
            ips: |
              {{ platform_domain_name }}
              {% for ip in ips %}
              {{ ip }}
              {% endfor %}
      vars: 
        ips: "{{ info.results | map(attribute='openstack_servers') | flatten | map(attribute='public_v4') | select() }}"

- name: Install etcd secrets in the cluster to monitor the cluster
  hosts: kube_control_plane[0]
  gather_facts: false
  tags: etcd-client-secret
  tasks:
    - name: Create kubernetes etcd-client secret
      command: >
        kubectl create secret generic etcd-client
        --from-file=/etc/kubernetes/pki/etcd/ca.crt
        --from-file=/etc/kubernetes/pki/etcd/server.key
        --from-file=/etc/kubernetes/pki/etcd/server.crt
        --namespace monitoring
      become: true
