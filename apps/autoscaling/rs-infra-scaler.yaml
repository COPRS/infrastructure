---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rs-infra-scaler
  labels:
    app.kubernetes.io/component: rs-infra-scaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: rs-infra-scaler
  template:
    metadata:
      labels:
        app.kubernetes.io/component: rs-infra-scaler
    spec:
      priorityClassName: system-cluster-critical
      containers:
        - image: artifactory.coprs.esa-copernicus.eu/rs-docker/rs-infra-scaler:1.1.0
          name: rs-infra-scaler
          resources:
            limits:
              cpu: 1
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          command:
            - /opt/rs-infra-scaler/rs-infra-scaler
            - --listen-port
            - "8086"
            - --verbosity
            - "3"
            - --tenant
            - "{{ safescale_tenant }}"
          env:
            - name: SAFESCALED_LISTEN
              value: "safescaled.{{ kustomization.namespace }}.svc.cluster.local:50051"
          volumeMounts:
            - name: generated-inventory
              mountPath: /opt/rs-infra-scaler/inventory/group_vars/all
              readOnly: true
          readinessProbe:
            tcpSocket:
              port: 8087
            initialDelaySeconds: 180
            periodSeconds: 20
            failureThreshold: 20
          livenessProbe:
            tcpSocket:
              port: 8086
            initialDelaySeconds: 240
            failureThreshold: 3
            periodSeconds: 60
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "node-role.kubernetes.io/infra"
                  operator: Exists
      volumes:
        - name: generated-inventory
          secret:
            secretName: generated-inventory
---
apiVersion: v1
kind: Service
metadata:
  name: rs-infra-scaler
  labels:
    app.kubernetes.io/component: rs-infra-scaler
spec:
  ports:
  - name: grpc
    port: 8086
    protocol: TCP
    targetPort: 8086
  - name: metrics
    port: 8087
    protocol: TCP
    targetPort: 8087
  selector:
    app.kubernetes.io/component: rs-infra-scaler
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rs-infra-scaler
  labels:
    app.kubernetes.io/component: rs-infra-scaler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: rs-infra-scaler
  endpoints:
    - port: metrics
      interval: 20s
      path: /metrics
