{
  "id": "RS",
  "realm": "RS",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "roles": {
    "realm": [
      {
        "name": "user_manager",
        "description": "Manage groups and users in Reference System",
        "composite": true,
        "composites": {
          "client": {
            "realm-management": [
              "query-users",
              "view-users",
              "view-realm",
              "query-groups",
              "manage-users"
            ]
          }
        },
        "clientRole": false,
        "containerId": "RS",
        "attributes": {}
      },
      {
        "name": "default-roles-rs",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "RS",
        "attributes": {}
      },
      {
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "RS",
        "attributes": {}
      },
      {
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "RS",
        "attributes": {}
      }
    ],
    "client": {
      "apisix": [
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ],
      "grafana": [
        {
          "name": "editor",
          "description": "Editor role in grafana",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        },
        {
          "name": "viewer",
          "description": "Viewer role in Grafana",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        },
        {
          "name": "admin",
          "description": "grafana admin",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        },
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ],
      "graylog": [
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ],
      "kibana": [
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ],
      "linkerd": [
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ],
      "prometheus": [
        {
          "name": "restricted-access",
          "description": "Only users with this role may access the client",
          "composite": false,
          "clientRole": true,
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "name": "networking",
      "path": "/networking",
      "attributes": {
        "gidNumber": [
          "2004"
        ]
      },
      "realmRoles": [],
      "clientRoles": {
        "linkerd": [
          "restricted-access"
        ],
        "apisix": [
          "restricted-access"
        ]
      },
      "subGroups": []
    },
    {
      "name": "operator",
      "path": "/operator",
      "attributes": {
        "gidNumber": [
          "2002"
        ]
      },
      "realmRoles": [],
      "clientRoles": {
        "grafana": [
          "restricted-access",
          "editor"
        ],
        "prometheus": [
          "restricted-access"
        ],
        "kibana": [
          "restricted-access"
        ]
      },
      "subGroups": []
    },
    {
      "name": "rs-admin",
      "path": "/rs-admin",
      "attributes": {
        "gidNumber": [
          "2001"
        ]
      },
      "realmRoles": [
        "user_manager"
      ],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "name": "rs-user",
      "path": "/rs-user",
      "attributes": {
        "gidNumber": [
          "2000"
        ]
      },
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "name": "security",
      "path": "/security",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {
        "graylog": [
          "restricted-access"
        ]
      },
      "subGroups": []
    },
    {
      "name": "sudo",
      "path": "/sudo",
      "attributes": {
        "gidNumber": [
          "27"
        ]
      },
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRole": {
    "name": "default-roles-rs",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "RS"
  },
  "defaultGroups": [
    "/rs-user"
  ],
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "notUsername(undefined) and length(12) and lowerCase(1) and upperCase(1) and digits(1) and specialChars(1) and notEmail(undefined) and forceExpiredPasswordChange(90) and passwordHistory(3)",
  "clients": [
    {
      "clientId": "apisix",
      "name": "Oauth2 Proxy",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "d08e16f6-ef3d-4b49-b5fd-b8d50e99f569",
      "redirectUris": [
          "https://apisix.DOMAIN_NAME/*"
      ],
      "webOrigins": [],
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true
    },
    {
      "clientId": "grafana",
      "rootUrl": "${authBaseUrl}",
      "adminUrl": "",
      "baseUrl": "/login/generic_oauth",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "4cb16727-a3c3-444d-8fc0-b4238566a87f",
      "redirectUris": [
        "https://monitoring.DOMAIN_NAME/login/generic_oauth"
      ],
      "webOrigins": [],
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "protocolMappers": [
        {
          "name": "Roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "roles",
            "jsonType.label": "String",
            "usermodel.clientRoleMapping.clientId": "grafana"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": []
    },
    {
      "clientId": "graylog",
      "name": "Oauth2 Proxy",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "d96c32e1-a357-48c8-974c-bfb30a265085",
      "redirectUris": [
          "https://security.DOMAIN_NAME/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "clientId": "kibana",
      "name": "Oauth2 Proxy",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "63cf253f-bf86-43c0-8f18-96d1ccb4e2a6",
      "redirectUris": [
          "https://infra.DOMAIN_NAME/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "clientId": "linkerd",
      "name": "Oauth2 Proxy",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "05576d8c-162d-45b0-9dda-53023df46b2a",
      "redirectUris": [
          "https://linkerd.DOMAIN_NAME/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    },
    {
      "clientId": "prometheus",
      "name": "Oauth2 Proxy",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "54616714-8684-4dcb-be7c-caa2121350ad",
      "redirectUris": [
          "https://monitoring.DOMAIN_NAME/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "defaultClientScopes": [],
      "optionalClientScopes": []
    }
  ],
  "authenticationFlows": [
    {
      "alias": "Browser - restricted",
      "description": "browser based authentication implementating client restriction based on user's role",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 30,
          "flowAlias": "Login",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "restricted-access",
          "authenticator": "restrict-client-auth-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 31,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "Login",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Username / Password",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "Username / Password",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "alias": "restricted-access",
      "config": {
        "restrictClientAuthErrorMessage": "access-denied",
        "accessProviderId": "client-role"
      }
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "browserFlow": "Browser - restricted",
  "attributes": {
    "frontendUrl": "https://security.DOMAIN_NAME/auth"
  },
  "components": {
    "org.keycloak.storage.UserStorageProvider": [
      {
        "name": "openldap.security.svc.cluster.local",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "name": "cn",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "cn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "name": "shadowExpire",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "shadowExpire"
                ],
                "attribute.default.value": [
                  "-1"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "shadowExpire"
                ]
              }
            },
            {
              "name": "userPassword",
              "providerId": "hardcoded-ldap-attribute-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute.value": [
                  "'${RANDOM}'"
                ],
                "ldap.attribute.name": [
                  "userPassword"
                ]
              }
            },
            {
              "name": "loginShell",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "loginShell"
                ],
                "attribute.default.value": [
                  "/bin/bash"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "loginShell"
                ]
              }
            },
            {
              "name": "gidNumber",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "gidNumber"
                ],
                "attribute.default.value": [
                  "2000"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "gidNumber"
                ]
              }
            },
            {
              "name": "groupsLDAP",
              "providerId": "group-ldap-mapper",
              "subComponents": {},
              "config": {
                "membership.attribute.type": [
                  "DN"
                ],
                "group.name.ldap.attribute": [
                  "cn"
                ],
                "membership.user.ldap.attribute": [
                  "uid"
                ],
                "preserve.group.inheritance": [
                  "true"
                ],
                "groups.dn": [
                  "ou=groups,dc=cluster,dc=local"
                ],
                "mapped.group.attributes": [
                  "gidNumber"
                ],
                "mode": [
                  "LDAP_ONLY"
                ],
                "user.roles.retrieve.strategy": [
                  "LOAD_GROUPS_BY_MEMBER_ATTRIBUTE"
                ],
                "ignore.missing.groups": [
                  "true"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "group.object.classes": [
                  "groupOfNames,posixGroup,top"
                ],
                "memberof.ldap.attribute": [
                  "memberOf"
                ],
                "groups.path": [
                  "/"
                ],
                "drop.non.existing.groups.during.sync": [
                  "true"
                ]
              }
            },
            {
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "givenName"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              }
            },
            {
              "name": "shadowWarning",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "shadowWarning"
                ],
                "attribute.default.value": [
                  "7"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "shadowWarning"
                ]
              }
            },
            {
              "name": "uidNumber",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "uidNumber"
                ],
                "attribute.default.value": [
                  "9999"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "uidNumber"
                ]
              }
            },
            {
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "name": "homeDirectory",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "homeDirectory"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "homeDirectory"
                ]
              }
            },
            {
              "name": "shadowInactive",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "shadowInactive"
                ],
                "attribute.default.value": [
                  "-1"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "shadowInactive"
                ]
              }
            },
            {
              "name": "shadowMax",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "shadowMax"
                ],
                "attribute.default.value": [
                  "9999"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "shadowMax"
                ]
              }
            },
            {
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "uid"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            }
          ]
        },
        "config": {
          "pagination": [
            "true"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "startTls": [
            "false"
          ],
          "connectionPooling": [
            "true"
          ],
          "usersDn": [
            "ou=users,dc=cluster,dc=local"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "importEnabled": [
            "true"
          ],
          "enabled": [
            "true"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "bindCredential": [
            "adminpassword"
          ],
          "bindDn": [
            "cn=admin,dc=cluster,dc=local"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "lastSync": [
            "1639045217"
          ],
          "vendor": [
            "other"
          ],
          "uuidLDAPAttribute": [
            "uid"
          ],
          "connectionUrl": [
            "ldap://openldap.security.svc.cluster.local"
          ],
          "allowKerberosAuthentication": [
            "false"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ],
          "debug": [
            "false"
          ],
          "searchScope": [
            "1"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "usePasswordModifyExtendedOp": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "trustEmail": [
            "false"
          ],
          "userObjectClasses": [
            "inetOrgPerson, posixAccount, shadowAccount"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "validatePasswordPolicy": [
            "true"
          ],
          "batchSizeForSync": [
            "1000"
          ]
        }
      }
    ]
  }
}
