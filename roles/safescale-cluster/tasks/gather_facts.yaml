- name: Getting host list with safescale
  shell: "{{ safescale_path }} cluster inspect {{ cluster.name }} | jq .result.nodes.masters[].name,.result.nodes.nodes[].name | tr -d '\"' | sort"
  register: hosts

- name: Check whether hosts exist for cluster {{ cluster.name }}
  fail:
    msg: Getting host list with safescale returned an empty node list. Maybe the cluster does not exist yet or the cluster name has a mistake.
  when: hosts.stdout | length == 0

- name: Get masters and gateways
  set_fact:
    nodes: "{{ hosts.stdout_lines |select('match','^.*node.*$') }}"
    masters: "{{ hosts.stdout_lines | select('match','^.*master.*$') }}"
    gateways: "{{ [ 'gw-' + cluster.name ] |Â list }}"

- name: Get nodes, egresses and prometheuses
  set_fact:
    prometheuses: "{{ nodes[-cluster.prometheus.count:] }}"
    egresses: "{{ nodes[-(cluster.egress.count + cluster.prometheus.count):-cluster.prometheus.count] }}"
    nodes: "{{ nodes[:-(cluster.egress.count + cluster.prometheus.count)] }}"

- name: Check whether a second gateway is defined
  shell: "{{ safescale_path }} cluster inspect {{ cluster.name }} | jq .result.secondary_gateway_ip"
  register: gateway

- name: Adding second gateway if defined
  set_fact:
    gateways: "{{ gateways + [ 'gw2-'+cluster.name ] }}"
  when: gateway.stdout != 'null'

- name: Making a list with all hosts
  set_fact:
    hosts: "{{ nodes + masters + gateways + egresses + prometheuses}}"
