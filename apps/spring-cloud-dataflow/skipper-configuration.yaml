# Copyright 2023 CS Group
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

management:
  metrics:
      export:
        prometheus:
            enabled: true
            rsocket:
              enabled: true
              host: spring-cloud-dataflow-prometheus-proxy
              port: 7001
spring:
  cloud:
    skipper:
      server:
        platform:
          kubernetes:
            accounts:
              default:
                namespace: {{ kustomization.helmCharts[0].namespace }}
                environmentVariables:
                  - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
                  - SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES=kafka-cluster-zookeeper-client.infra.svc.cluster.local:2181
                limits:
                  cpu: 500m
                  memory: 1024Mi
                readinessProbeDelay: 120
                livenessProbeDelay: 90
                podSecurityContext:
                  runAsUser: 1001
                imagePullSecrets:
                  - spring-cloud-dataflow-registry-dockersecret
                entryPointStyle: exec
                imagePullPolicy: IfNotPresent
{% for namespace in scdf.namespaces %}
              {{ namespace }}:
                namespace: {{ namespace }}
                environmentVariables:
                  - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
                  - SPRING_CLOUD_STREAM_KAFKA_BINDER_ZK_NODES=kafka-cluster-zookeeper-client.infra.svc.cluster.local:2181
                limits:
                  cpu: 500m
                  memory: 1024Mi
                readinessProbeDelay: 120
                livenessProbeDelay: 90
                podSecurityContext:
                  runAsUser: 1001
                imagePullSecrets:
                  - spring-cloud-dataflow-registry-dockersecret
                entryPointStyle: exec
                imagePullPolicy: IfNotPresent
{% endfor %}
  datasource:
    url: 'jdbc:postgresql://postgresql-primary-hl.database.svc.cluster.local:5432/skipper'
    driverClassName: org.postgresql.Driver
    username: scdf
    password: ${mariadb-password}
    testOnBorrow: true
    validationQuery: "SELECT 1"
  flyway:
    enabled: true
