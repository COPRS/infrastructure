---
- name: Changing safescale operator in ansible.cfg
  lineinfile:
    path: "{{ playbook_dir }}/../ansible.cfg"
    regexp: '^remote_user *=*'
    line: "remote_user       = {{ safescale_operator }}"

- name: Getting host list with safescale
  shell: "{{ safescale_path }} cluster inspect {{ cluster.name }} | jq .result.nodes.masters[].name,.result.nodes.nodes[].name | tr -d '\"' | sort"
  register: hosts

- name: No host found for cluster {{ cluster.name }}
  fail:
    msg: Getting host list with safescale returned an empty node list. Maybe the cluster does not exist yet or the cluster name has a mistake.
  when: hosts.stdout | length == 0

- name: Setting nodes and masters variables
  set_fact:
    nodes: "{{ hosts.stdout_lines | list | select('match','^.*node.*$') | list }}"
    masters: "{{ hosts.stdout_lines | list | select('match','^.*master.*$') | list }}"
    gateways: "{{ [ 'gw-' + cluster.name ] | list }}"

- name: Update nodes for egress
  set_fact:
    egresss: [ "{{ nodes | last }}" ]
    nodes: "{{ nodes | difference(nodes | last) }}"
  when: add_egress

- name: Check whether a second gateway is defined
  shell: "{{ safescale_path }} cluster inspect {{ cluster.name }} | jq .result.secondary_gateway_ip"
  register: gateway

- name: Adding second gateway if defined
  set_fact:
    gateways: "{{ gateways + [ 'gw2-'+cluster.name ] }}"
  when: gateway.stdout != 'null'

- name: Making a list with all hosts
  set_fact:
    hosts: "{{ nodes + masters + gateways }}"

- name: Add egresss to hosts
  set_fact:
    hosts: "{{ hosts + egresss }}"
  when: add_egress

- name: Getting the main gateway IP
  shell: "{{ safescale_path }} host inspect {{ gateways[0] }} | jq .result.public_ip | tr -d '\"'"
  register: main_gateway_ip

- name: Setting the main gateway IP fact
  set_fact:
    main_gateway_ip: "{{ main_gateway_ip.stdout }}"

- name: Creating the .ssh folder for the cluster ssh keys
  file:
    path: "{{ playbook_dir }}/../.ssh/"
    state: directory
    mode: 0700

- name: Check if ssh key files exist
  find:
    paths: [ "{{ playbook_dir }}/../.ssh/" ]
  register: ssh_files

- name: Create the ssh key files
  shell: "echo \"$({{ safescale_path }} host show {{ item }} | jq .result.private_key )\" | tr -d '\"' | head -c -1 - >> {{ playbook_dir }}/../.ssh/{{ item }}.pem && chmod 400 {{ playbook_dir }}/../.ssh/{{ item }}.pem "
  when: not item in ( ssh_files.files |  map(attribute='path') | join(' ') )
  with_items: " {{ hosts }} "

- name: Get the hosts ip adresses
  shell: "{{ safescale_path }} host show {{ item }} | jq .result.private_ip | tr -d '\"' "
  with_items: " {{ hosts }} "
  register: ip_adresses

- name: Set the ip adresses
  set_fact:
    ip_adresses: "{{ ip_adresses.results | map(attribute='stdout') | list }}"

- name: Update hosts.ini
  blockinfile:
    path: "{{ inventory_dir }}/hosts.ini"
    block: "{{ lookup('template', 'hosts.j2') }}"

- name: Create the bastion file
  template:
    src: ssh-main-gateway.j2
    dest: "{{ playbook_dir }}/../ssh-main-gateway.conf"
